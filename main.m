function [xhat, p_vec] = main(search_path_input, pID)

%Command Window Example: main('.\Phase1', 01), main('.\GV_Control', 01)

% home
% code version
ver = 0.01;

% Get started
if isnumeric(pID)
    patient_number = pID;
else
    patient_number = round(str2double(pID));
end
disp(' ')
disp(' ')
disp(['Running multihypothesis Kalman ' num2str(ver) ' on Subject ' num2str(patient_number)]);

%% Data Preprocessing

% Parse data into discrete time signals
data_preprocessing(search_path_input, patient_number);
%GV_data_preprocessing(search_path_input, patient_number);

% Extract everything (except CGM) into "extended days"
[...
    dSMBG_extended_day,...
    dU_extended_day,...
    bolus_extended_day,...
    basal_extended_day,...
    meal_mgpmin_extended_day,...
    dates_extended_day,...
    siopt,...
    fastingBG,...
    BW,...
    avgbasalprofilerate_mUpmin...
    ] = parseExtendedDaysStep1(search_path_input, patient_number);

% Chop first extended day
dSMBG_extended_day = dSMBG_extended_day(:,2:end);
dU_extended_day = dU_extended_day(:,2:end);
bolus_extended_day = bolus_extended_day(:,2:end);
basal_extended_day = basal_extended_day(:,2:end);
meal_mgpmin_extended_day = meal_mgpmin_extended_day(:,2:end);
dates_extended_day = dates_extended_day(:,2:end);

[...
    dCGM_extended_day_actual,...
    datesValidCGM_extended_day...
    ] = parseExtendedDaysStep2(search_path_input, patient_number);

% Reconcile dates incase any of the extended days had to be dropped
[...
    dCGM_extended_day_actual,...
    dSMBG_extended_day,...
    dU_extended_day,...
    bolus_extended_day,...
    basal_extended_day,...
    meal_mgpmin_extended_day,...
    dates_extended_day...
    ] = reconcileDates(...
    dCGM_extended_day_actual,...
    datesValidCGM_extended_day,...
    dSMBG_extended_day,...
    dU_extended_day,...
    bolus_extended_day,...
    basal_extended_day,...
    meal_mgpmin_extended_day,...
    dates_extended_day...
    );

%% Hypothesis Generation

%Finds recorded meal times
meal_times = find(meal_mgpmin_extended_day(:,1));

%Creates empty array for new hypothesized meal times
meal_hypos = zeros(length(meal_mgpmin_extended_day(:,1)),1);

%Changes meal times in increments of 15 minutes ranging from 30 minutes
%before to 30 minutes after=
for i=-2:2
    h_meal_times = meal_times+3*i;
    meal_hypos(h_meal_times,i+3) = meal_mgpmin_extended_day(meal_times,1); 
end


%% Hypothesis Evaluation

% run filter bank on (here, just on extended day 1). here, the hypotheses
% are (1) the historical meal vector and (2) 1.5 times the historical
% meal vector.
%
% for our purposes, we will (1) not replay whole extended days (but
% rather meal scenarios (snippets of data), emulating operation in real
% time), (2) generate reasonable meal process hypotheses based on the
% scenario
%
% you'll probably want to do away with the matrices of "extended_days" and
% string these together by concatenating the 0000-2355 segments in the
% middle of each extended day.

%ARE PRIORS BEING RESET AND SHOULD THEY BE?
[xhat, p_vec] = retrospective_multihypothesis_kalman(...
                    siopt, ...
                    fastingBG, ...
                    BW, ...
                    dCGM_extended_day_actual(:, 1), ...
                    dU_extended_day(:, 1), ...
                    meal_hypos);
                
%% Visualize Results
plot(p_vec)
xlim([0 432])
ylim([-0.1 1.1])
legend('-30','-15','0','+15','+30')
